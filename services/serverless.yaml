service: "website-honestly-${env:ENVIRONMENT_NAME}"

custom:
  bucket_name: "${env:BUCKET_NAME}"

package:
  artifact: ../dist/services.zip

provider:
  name: aws
  stage: dev
  region: eu-west-1
  runtime: nodejs4.3
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:PutObject"
      Resource:
        - "arn:aws:s3:::${self:custom.bucket_name}"
        - "arn:aws:s3:::${self:custom.bucket_name}/*"
    - Effect: 'Allow'
      Action:
        - 'SES:SendEmail'
        - 'SES:SendRawEmail'
      Resource: 'arn:aws:ses:eu-west-1:578418881509:identity/hello@red-badger.com'


functions:
  publish:
    handler: index.publish
  contactUs:
    handler: index.contactUs
    events:
      - http:
          path: contact-us
          method: post
          cors: true


resources:
  Resources:
    SiteContentBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "${self:custom.bucket_name}"
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: 404/index.html
          RoutingRules:
            - RoutingRuleCondition:
                KeyPrefixEquals: "services"
              RedirectRule:
                HttpRedirectCode: "301"
                ReplaceKeyWith: "what-we-do"
            - RoutingRuleCondition:
                KeyPrefixEquals: "services/technology"
              RedirectRule:
                HttpRedirectCode: "301"
                ReplaceKeyWith: "what-we-do/technology"
            - RoutingRuleCondition:
                KeyPrefixEquals: "our-work"
              RedirectRule:
                HttpRedirectCode: "301"
                ReplaceKeyWith: "what-we-do/our-work"
            - RoutingRuleCondition:
                KeyPrefixEquals: "about-us/contact-us"
              RedirectRule:
                HttpRedirectCode: "301"
                ReplaceKeyWith: ""

    SiteContentBucketPolicy:
      Type: "AWS::S3::BucketPolicy"
      DependsOn: "SiteContentBucket"
      Properties:
        Bucket: "${self:custom.bucket_name}"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - "s3:GetObject"
              Resource:
                - "arn:aws:s3:::${self:custom.bucket_name}/*"

    SiteCloudfrontDistribution:
      Type: "AWS::CloudFront::Distribution"
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: "${self:custom.bucket_name}.s3.amazonaws.com"
              Id: "S3Origin"
              CustomOriginConfig:
                HTTPPort: "80"
                HTTPSPort: "443"
                OriginProtocolPolicy: "https-only"
          CustomErrorResponses:
            - ErrorCachingMinTTL : 20
              ErrorCode: 404
              ResponseCode: 404
              ResponsePagePath: "/404.html"
          Enabled: "true"
          PriceClass: "PriceClass_200"
          DefaultRootObject: "index.html"
          DefaultCacheBehavior:
            TargetOriginId: "S3Origin"
            ViewerProtocolPolicy: "allow-all"
            AllowedMethods:
              - "HEAD"
              - "GET"
            MinTTL: 5
            DefaultTTL: 60
            MaxTTL: 120
            ForwardedValues:
              QueryString: "false"
              Cookies:
                Forward: "none"

    ErrorSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
          - Endpoint: "${env:CONTACT_US_SUPPORT_EMAIL}"
            Protocol: email

    LambdaErrorAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: "ErrorSNSTopic"
        AlarmDescription: "An error has been thrown by the lambda function responsible for sending contact form information to hello@red-badger.com."
        AlarmName: ContactUsLambdaErrorAlarm-${env:ENVIRONMENT_NAME}
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: ContactUsLambdaFunction
        EvaluationPeriods: 1
        MetricName: Errors
        Namespace: AWS/Lambda
        Period: 60
        Statistic: Sum
        Threshold: 1
        Unit: Count
